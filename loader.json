let CONFIG = null;

async function caricaConfigDaLoader() {
  try {
    const loaderUrl = localStorage.getItem("loader_url") || "/loader.json";
    console.log("üì¶ Carico loader da:", loaderUrl);

    const loaderRes = await fetch(loaderUrl);
    if (!loaderRes.ok) throw new Error("‚ùå Loader non trovato");
    const loader = await loaderRes.json();

    const configUrl = loader.config_url;
    console.log("üîó Carico config da:", configUrl);

    const configRes = await fetch(configUrl);
    if (!configRes.ok) throw new Error("‚ùå Config non trovato");
    CONFIG = await configRes.json();

    console.log("‚úÖ CONFIG ricevuto:", CONFIG);

    // üîÅ Caricamento logo da Google Drive via Netlify Image CDN
    const logoId = CONFIG.ui_options?.logo_id;
    const logoFileId = CONFIG.files?.[logoId];
    if (logoFileId) {
      const driveImageUrl = `https://drive.usercontent.google.com/uc?id=${logoFileId}&export=view`;
      const imageCdnUrl = `/netlify/images?url=${encodeURIComponent(driveImageUrl)}`;
      const logoImg = document.getElementById("logo-asd");
      if (logoImg) {
        logoImg.src = imageCdnUrl;
        console.log("üñºÔ∏è Logo via Netlify Image CDN:", imageCdnUrl);
      } else {
        console.warn("‚ö†Ô∏è Elemento #logo-asd non trovato nel DOM.");
      }
    } else {
      console.warn("‚ö†Ô∏è Logo ID non trovato nel config.");
    }

  } catch (err) {
    console.error("‚ùå Errore caricamento config:", err);
  }
}

window.onload = caricaConfigDaLoader;
